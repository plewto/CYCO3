;;;; CYCO chords  default-chords.lisp
;;;;
;;;; Defines the default chord table *CHORD-TABLE*
;;;;

(in-package :cyco)

(global *chord-table* (make-instance 'chord-table
				     :name 'default-chord-table
				     :templates (make-hash-table :size 144)
				     :descriptions (make-hash-table :size 144))
	"Default chord-model")

(defun defchord (chord-name template-list &optional description)
  "Defines new chord for default *chord-table*"
  (define-chord *chord-table* chord-name template-list description))

(defun ?chords (&optional (chord-model *chord-table*))
  "Displays list of defined chords in chord-model,
By default *chord-table*"
  (if (or (project-p chord-model)(section-p chord-model)(part-p chord-model))
      (dump-chords (property chord-model :chord-model))
    (dump-chords chord-model)))

(defchord '[solo]      '(0) "")
(defchord '[maj]       '(0 4 7) "Major")
(defchord '[maj]>1     '(4 7 12) "Major 1st inversion")
(defchord '[maj]>2     '(7 12 16) "Major 2nd inversion")
(defchord '[maj]<2     '(-5 0 4)  "Major 2nd inversion down 1 octave")
(defchord '[maj]<1     '(-8 -5 0) "Major 1st inversion down 1 octave")
(defchord '[maj7]      '(0 4 7 11) "Major 7th")
(defchord '[7]         '(0 4 7 10) "Dominate 7th")
(defchord '[maj6]      '(0 4 7 9) "Major 6th")
(defchord '[sus2]      '(0 2 7) "Major sustained 2")
(defchord '[sus4]      '(0 5 7) "Major sustained 4")
(defchord '[7sus4]     '(0 5 7 10) "Major 7th sustain 4")
(defchord '[aug]       '(0 3 8) "Augmented")
(defchord '[M7+5]      '(0 3 8 11) "Major 7th aug 5")
(defchord '[7+5]       '(0 3 8 10) "Dominate 7th aug 5")
(defchord '[dim]       '(0 3 6) "Diminished")
(defchord '[dim7]      '(0 3 6 10) "Diminished 7")
(defchord '[power]     '(0 7) "")
(defchord '[maj9]      '(0 4 7 11 14) "Major 9")
(defchord '[9]         '(0 4 7 10 14) "Dominate 9")
(defchord '[69]        '(0 4 7 9 14) "Major 6 9")
(defchord '[11]        '(0 4 7 10 14 16) "Major 11")
(defchord '[13]        '(0 4 7 10 14 16 20) "Major 13")
(defchord '[add9]      '(0 4 7 14) "Major add 9")
(defchord '[7-9]       '(0 4 7 10 13) "Dom 7 flat 9")
(defchord '[7-9+5]     '(0 4 8 10 13) "Dom 7 flat 9 aug 5")
(defchord '[7+9]       '(0 4 7 10 15) "Dom 7 sharp 9")
(defchord '[9+5]       '(0 4 8 10 14) "Major 9 aug 5")
(defchord '[9-5]       '(0 4 6 10 14) "Major 9 dim 5")
(defchord '[9+11]      '(0 4 7 10 14 18) "Major 9 sharp 11")
(defchord '[13-9]      '(0 4 7 10 13 17 21) "Major 13 flat 9")
(defchord '[13-9-5]    '(0 4 6 10 13 17 21) "Major 13 flat 9 flat 5")

(defchord '[min]       '(0 3 7) "Minor")
(defchord '[min]>1     '(3 7 12) "Minor 1st inversion")
(defchord '[min]>2     '(7 12 15) "Minor 2nd inversion")
(defchord '[min]<1     '(-9 -5 0) "Minor 1st inversion down 1 octave")
(defchord '[min]<2     '(-5 0 3)  "Minor 2nd inversion down 1 octave")
(defchord '[min+7]     '(0 3 7 11) "Minor sharp 7")
(defchord '[min7]      '(0 3 7 10) "Minor 7")
(defchord '[min6]      '(0 3 7 9) "Minor 6")
(defchord '[dim-7]     '(0 3 6 9) "Diminished 7")
(defchord '[min+9]     '(0 3 7 11 14) "Minor sharp 9")
(defchord '[min9]      '(0 3 7 10 14) "Minor 9")
(defchord '[min69]     '(0 3 7 9 14) "Minor 6 9")
(defchord '[min11]     '(0 3 7 10 14 17) "Minor 11")
(defchord '[min-add9]  '(0 3 7 14) "Minor add 9")
(defchord '[min-add11] '(0 3 7 17) "Minor add 11")
;; Simple Intervals
(defchord 'unison     '(0) "Simple interval")
(defchord '+min2      '(1) "Simple interval")
(defchord '+maj2      '(2) "Simple interval")
(defchord '+min3      '(3) "Simple interval")
(defchord '+maj3      '(4) "Simple interval")
(defchord '+dim4      '(4) "Simple interval")
(defchord '+per4      '(5) "Simple interval")
(defchord '+aug4      '(6) "Simple interval")
(defchord '+dim5      '(6) "Simple interval")
(defchord '+per5      '(7) "Simple interval")
(defchord '+aug5      '(8) "Simple interval")
(defchord '+min6      '(8) "Simple interval")
(defchord '+maj6      '(9) "Simple interval")
(defchord '+min7     '(10) "Simple interval")
(defchord '+maj7     '(11) "Simple interval")
(defchord '+oct      '(12) "Simple interval")
;; Dyads
(defchord 'dy[min2]   '(0 1) "Dyad")
(defchord 'dy[maj2]   '(0 2) "Dyad")
(defchord 'dy[min3]   '(0 3) "Dyad")
(defchord 'dy[maj3]   '(0 4) "Dyad")
(defchord 'dy[dim4]   '(0 4) "Dyad")
(defchord 'dy[per4]   '(0 5) "Dyad")
(defchord 'dy[aug4]   '(0 6) "Dyad")
(defchord 'dy[dim5]   '(0 6) "Dyad")
(defchord 'dy[per5]   '(0 7) "Dyad")
(defchord 'dy[aug5]   '(0 8) "Dyad")
(defchord 'dy[min6]   '(0 8) "Dyad")
(defchord 'dy[maj6]   '(0 9) "Dyad")
(defchord 'dy[min7]  '(0 10) "Dyad")
(defchord 'dy[maj7]  '(0 11) "Dyad")
(defchord 'dy[oct]   '(0 12) "Dyad")
;; Clusters
(defchord '[whole-2]     '(0 2) "2 note whole-tone cluster")
(defchord '[whole-3]     '(0 2 4) "3 note whole-tone cluster")
(defchord '[whole-4]     '(0 2 4 6) "4 note whole-tone cluster")
(defchord '[whole-5]     '(0 2 4 6 8) "5 note whole-tone cluster")
(defchord '[whole-6]     '(0 2 4 6 8 10) "6 note whole-tone cluster")
(defchord '[klstr-2]      '(0 1) "2 note chromatic cluster")
(defchord '[klstr-3]      '(0 1 2) "3 note chromatic cluster")
(defchord '[klstr-4]      '(0 1 2 3) "4 note chromatic cluster")
(defchord '[klstr-5]      '(0 1 2 3 4) "5 note chromatic cluster")
(defchord '[klstr-6]      '(0 1 2 3 4 5 6) "6 note chromatic cluster")
(defchord '[klstr-7]      '(0 1 2 3 4 5 6 7) "7 note chromatic cluster")
(defchord '[klstr-8]      '(0 1 2 3 4 5 6 7 8) "8 note chromatic cluster")
(defchord '[klstr-9]      '(0 1 2 3 4 5 6 7 8 9) "9 note chromatic cluster")
(defchord '[klstr-10]     '(0 1 2 3 4 5 6 7 8 9 10) "10 note chromatic cluster")
(defchord '[klstr-11]     '(0 1 2 3 4 5 6 7 8 9 10 11) "11 note chromatic cluster")
(defchord '[circle-min3] '(0 3 6 9) "Circle of minor 3rds")
(defchord '[circle-3]    '(0 4 8) "Circle of major 3rds")
(defchord '[circle-4]    '(0 5 10 15 20 25 30 35 40 45 50 55) "Circle of 4ths")
(defchord '[circle-5]    '(0 7 14 21 28 35 42 49 56 63 70 77) "Circle of 5ths")
(defchord '[circle-aug5] '(0 8 16) "Circle of augmented 5ths")
(defchord '[circle-6]    '(0 9 18 27) "Circle of 6ths")
(defchord '[circle-min7] '(0 10 20 30 40 50) "Circle of minor 7ths")
(defchord '[circle-7]    '(0 11 22 33 44 55) "1/2 circle of major 7ths")
